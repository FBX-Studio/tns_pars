"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
"""
import logging
from config import Config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

print("=" * 80)
print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–• –ö–û–õ–õ–ï–ö–¢–û–†–û–í")
print("=" * 80)

# –¢–µ—Å—Ç 1: VK Collector
print("\n[1/5] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VK Collector")
print("-" * 80)
try:
    from collectors.vk_collector import VKCollector
    vk = VKCollector()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–∞ collect —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º collect_comments
    import inspect
    sig = inspect.signature(vk.collect)
    params = list(sig.parameters.keys())
    
    print(f"OK: VK Collector –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    print(f"  –ú–µ—Ç–æ–¥ collect –∏–º–µ–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
    
    if 'collect_comments' in params:
        print(f"  [+] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –î–ê")
        print(f"  –ú–µ—Ç–æ–¥ get_wall_comments: {'[+] –ï—Å—Ç—å' if hasattr(vk, 'get_wall_comments') else '[-] –ù–µ—Ç'}")
    else:
        print(f"  [-] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –ù–ï–¢")
    
    # –ü—Ä–æ–±—É–µ–º —Å–æ–±—Ä–∞—Ç—å (—Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5 –ø–æ—Å—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞)
    print("\n  –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–±–æ—Ä–∞ (–º–∞–∫—Å 5 –ø–æ—Å—Ç–æ–≤)...")
    try:
        # –í—Ä–µ–º–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        original_limit = vk.limit
        vk.limit = 5
        
        posts = vk.collect(collect_comments=True)
        
        vk.limit = original_limit
        
        print(f"  [+] –°–æ–±—Ä–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        comments_count = sum(1 for p in posts if p.get('is_comment'))
        posts_count = len(posts) - comments_count
        
        print(f"  [+] –ò–∑ –Ω–∏—Ö –ø–æ—Å—Ç–æ–≤: {posts_count}")
        print(f"  [+] –ò–∑ –Ω–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {comments_count}")
        
        if comments_count > 0:
            print(f"  [+++] –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò –°–û–ë–ò–†–ê–Æ–¢–°–Ø!")
        else:
            print(f"  [!] –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –∏—Ö –Ω–µ—Ç –≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞—Ö)")
            
    except Exception as e:
        print(f"  [-] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ: {e}")
        
except Exception as e:
    print(f"[-] VK Collector –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

# –¢–µ—Å—Ç 2: Telegram Collector
print("\n[2/5] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram Collector")
print("-" * 80)
try:
    try:
        from collectors.telegram_user_collector import TelegramUserCollector as TelegramCollector
        collector_type = "TelegramUserCollector"
    except:
        from collectors.telegram_collector import TelegramCollector
        collector_type = "TelegramCollector"
    
    print(f"OK: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {collector_type}")
    
    tg = TelegramCollector()
    
    import inspect
    sig = inspect.signature(tg.collect)
    params = list(sig.parameters.keys())
    
    print(f"  –ú–µ—Ç–æ–¥ collect –∏–º–µ–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
    
    if 'collect_comments' in params:
        print(f"  [+] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –î–ê")
    else:
        print(f"  [-] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –ù–ï–¢")
    
    print("  ‚Ñπ –ü—Ä–æ–ø—É—Å–∫ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–±–æ—Ä–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)")
    
except Exception as e:
    print(f"[-] Telegram Collector –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

# –¢–µ—Å—Ç 3: News Collector  
print("\n[3/5] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ News Collector")
print("-" * 80)
try:
    from collectors.news_collector import NewsCollector
    news = NewsCollector()
    
    print(f"OK: News Collector –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã
    has_collect_with_comments = hasattr(news, 'collect_with_comments')
    has_parse_comments = hasattr(news, 'parse_article_comments')
    
    print(f"  –ú–µ—Ç–æ–¥ collect_with_comments: {'[+] –ï—Å—Ç—å' if has_collect_with_comments else '[-] –ù–µ—Ç'}")
    print(f"  –ú–µ—Ç–æ–¥ parse_article_comments: {'[+] –ï—Å—Ç—å' if has_parse_comments else '[-] –ù–µ—Ç'}")
    
    if has_collect_with_comments and has_parse_comments:
        print(f"  [+] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –î–ê")
    else:
        print(f"  [-] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –ù–ï–¢")
    
    print("  ‚Ñπ –ü—Ä–æ–ø—É—Å–∫ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–±–æ—Ä–∞ (–¥–æ–ª–≥–æ)")
    
except Exception as e:
    print(f"[-] News Collector –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

# –¢–µ—Å—Ç 4: Zen Collector
print("\n[4/5] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Zen Collector")
print("-" * 80)
try:
    try:
        from collectors.zen_selenium_collector import ZenSeleniumCollector as ZenCollector
        collector_type = "ZenSeleniumCollector"
    except:
        from collectors.zen_collector import ZenCollector
        collector_type = "ZenCollector"
    
    print(f"OK: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {collector_type}")
    
    zen = ZenCollector()
    
    import inspect
    sig = inspect.signature(zen.collect)
    params = list(sig.parameters.keys())
    
    print(f"  –ú–µ—Ç–æ–¥ collect –∏–º–µ–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
    
    if 'collect_comments' in params:
        print(f"  [+] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –î–ê")
    else:
        print(f"  [-] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –ù–ï–¢")
    
    has_parse_comments = hasattr(zen, 'parse_dzen_comments')
    print(f"  –ú–µ—Ç–æ–¥ parse_dzen_comments: {'[+] –ï—Å—Ç—å' if has_parse_comments else '[-] –ù–µ—Ç'}")
    
    print("  ‚Ñπ –ü—Ä–æ–ø—É—Å–∫ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–±–æ—Ä–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è Selenium)")
    
except Exception as e:
    print(f"[-] Zen Collector –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

# –¢–µ—Å—Ç 5: OK Collector
print("\n[5/5] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OK Collector")
print("-" * 80)
try:
    try:
        from collectors.ok_selenium_collector import OKSeleniumCollector as OKCollector
        collector_type = "OKSeleniumCollector"
    except:
        try:
            from collectors.ok_collector_working import OKCollectorWorking as OKCollector
            collector_type = "OKCollectorWorking"
        except:
            from collectors.ok_collector import OKCollector
            collector_type = "OKCollector"
    
    print(f"OK: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {collector_type}")
    
    ok = OKCollector()
    
    import inspect
    sig = inspect.signature(ok.collect)
    params = list(sig.parameters.keys())
    
    print(f"  –ú–µ—Ç–æ–¥ collect –∏–º–µ–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
    
    if 'collect_comments' in params:
        print(f"  [+] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –î–ê")
    else:
        print(f"  [!] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –ù–ï–¢ (OK.ru –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)")
    
    print("  ‚Ñπ –ü—Ä–æ–ø—É—Å–∫ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–±–æ—Ä–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è Selenium + –ø—Ä–æ–∫—Å–∏)")
    
except Exception as e:
    print(f"[-] OK Collector –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

# –ò—Ç–æ–≥–∏
print("\n" + "=" * 80)
print("–ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò")
print("=" * 80)
print("""
–ö–æ–ª–ª–µ–∫—Ç–æ—Ä—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
[+] VK - —Å–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–¥ –ø–æ—Å—Ç–∞–º–∏ –ø—Ä–æ –¢–ù–°
[+] Telegram - —Å–æ–±–∏—Ä–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã –≤ –∫–∞–Ω–∞–ª–∞—Ö (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
[+] News - –ø–∞—Ä—Å–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Å–∞–π—Ç–æ–≤
[+] Zen - –ø–∞—Ä—Å–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–∑ –î–∑–µ–Ω–∞

–ö–æ–ª–ª–µ–∫—Ç–æ—Ä—ã –ë–ï–ó –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
[!] OK - –Ω–µ –ø–∞—Ä—Å–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (OK.ru —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é)

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
1. VK - –æ—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ [+]
2. Telegram - —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Telethon (—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞)
3. News - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö (—á–∞—Å—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç)
4. Zen - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ (–º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å)
5. OK - –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ API —Å —Ç–æ–∫–µ–Ω–æ–º
""")

print("\n–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–±–æ—Ä —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏:")
print("http://127.0.0.1:5001 ‚Üí üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ‚Üí –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–±–æ—Ä")
print("=" * 80)
