"""
–¢–µ—Å—Ç –î–∑–µ–Ω –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞ —Å –ø—Ä–æ–∫—Å–∏
"""
import sys
sys.stdout.reconfigure(encoding='utf-8')

from dotenv import load_dotenv
load_dotenv(override=True, encoding='utf-8')

from collect_dzen_duckduckgo import DzenDuckDuckGoCollector
import logging

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

print("="*70)
print("–¢–ï–°–¢ –î–ó–ï–ù –ö–û–õ–õ–ï–ö–¢–û–†–ê –° –ü–†–û–ö–°–ò")
print("="*70)

print("\nüìã –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞ —Å –ø—Ä–æ–∫—Å–∏...")
print("-"*70)

try:
    collector = DzenDuckDuckGoCollector(use_proxy=True)
    print("‚úì –ö–æ–ª–ª–µ–∫—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω")
    print(f"‚úì –†–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏: {'–í–∫–ª—é—á–µ–Ω' if collector.use_proxy else '–í—ã–∫–ª—é—á–µ–Ω'}")
    if collector.use_proxy and collector.proxy_manager:
        print(f"‚úì –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–∫—Å–∏: {len(collector.proxy_manager.proxies)}")
except Exception as e:
    print(f"‚úó –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
    sys.exit(1)

print("\n" + "="*70)
print("üìã –®–∞–≥ 2: –°–±–æ—Ä —Å—Ç–∞—Ç–µ–π –∏–∑ –î–∑–µ–Ω...")
print("-"*70)

try:
    articles = collector.collect()
    
    print("\n" + "="*70)
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
    print("="*70)
    
    if articles:
        print("\n–ü—Ä–∏–º–µ—Ä—ã —Å—Ç–∞—Ç–µ–π:\n")
        for i, article in enumerate(articles[:5], 1):
            print(f"{i}. {article['text'][:100]}...")
            print(f"   URL: {article['url']}")
            print(f"   –ê–≤—Ç–æ—Ä: {article['author']}")
            print(f"   –î–∞—Ç–∞: {article['published_date']}")
            print()
    else:
        print("\n‚ö†Ô∏è –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("- –í –î–∑–µ–Ω –Ω–µ—Ç —Å—Ç–∞—Ç–µ–π —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏")
        print("- –ü—Ä–æ–∫—Å–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("- DuckDuckGo –≤—Å–µ –µ—â–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç")
        
except Exception as e:
    print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

print("\n" + "="*70)
print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
print("="*70)
